// Generated by https://quicktype.io

export interface IHavardArt {
  info: IInfo;
  records: IRecord[];
}

export interface IInfo {
  totalrecordsperquery: number;
  totalrecords: number;
  pages: number;
  page: number;
  next: string;
}

export interface IRecord {
  gallerynumber: string;
  labeltext: null | string;
  objectcount: number;
  galleryid: number;
  name: string;
  theme: null | string;
  id: number;
  lastupdate: ELastupdate;
  floor: number;
  url: string;
  objects: IObject[];
}

export enum ELastupdate {
  The20201101T0405390500 = "2020-11-01T04:05:39-0500",
}

export interface IObject {
  copyright: null;
  contextualtextcount: number;
  creditline: string;
  accesslevel: number;
  dateoflastpageview: string;
  classificationid: number;
  division: EDivision;
  markscount: number;
  publicationcount: number;
  totaluniquepageviews: number;
  contact: EContact;
  colorcount: number;
  rank: number;
  state: null;
  id: number;
  verificationleveldescription: string;
  period: null | string;
  images: IImage[];
  worktypes: IWorktype[];
  imagecount: number;
  totalpageviews: number;
  accessionyear: number | null;
  standardreferencenumber: null | string;
  signed: null | string;
  classification: string;
  relatedcount: number;
  verificationlevel: number;
  primaryimageurl: null | string;
  titlescount: number;
  peoplecount: number;
  style: null | string;
  lastupdate: string;
  commentary: null | string;
  periodid: number | null;
  technique: null | string;
  edition: null;
  description: null | string;
  medium: string;
  lendingpermissionlevel: number;
  title: string;
  accessionmethod: EAccessionmethod | null;
  colors?: IColor[];
  provenance: null | string;
  groupcount: number;
  dated: string;
  department: EDepartment;
  dateend: number;
  url: string;
  dateoffirstpageview: string;
  century: string;
  objectnumber: string;
  labeltext: null | string;
  datebegin: number;
  culture: null | string;
  exhibitioncount: number;
  imagepermissionlevel: number;
  mediacount: number;
  objectid: number;
  techniqueid: number | null;
  dimensions: string;
  seeAlso: ISeeAlso[];
  details?: IDetails;
  people?: IPerson[];
}

export enum EAccessionmethod {
  Bequest = "Bequest",
  Gift = "Gift",
  PartialGiftPartialPurchase = "Partial Gift/Partial Purchase",
  Purchase = "Purchase",
  Transfer = "Transfer",
}

export interface IColor {
  color: string;
  spectrum: string;
  hue: EHue;
  percent: number;
  css3: string;
}

export enum EHue {
  Black = "Black",
  Blue = "Blue",
  Brown = "Brown",
  Green = "Green",
  Grey = "Grey",
  Orange = "Orange",
  Red = "Red",
  Violet = "Violet",
  White = "White",
  Yellow = "Yellow",
}

export enum EContact {
  AmAsianmediterraneanHarvardEdu = "am_asianmediterranean@harvard.edu",
  AmEuropeanamericanHarvardEdu = "am_europeanamerican@harvard.edu",
}

export enum EDepartment {
  BuschReisingerMuseum = "Busch-Reisinger Museum",
  DepartmentOfAmericanPaintingsSculptureDecorativeArts = "Department of American Paintings, Sculpture & Decorative Arts",
  DepartmentOfAncientAndByzantineArtNumismatics = "Department of Ancient and Byzantine Art & Numismatics",
  DepartmentOfAsianArt = "Department of Asian Art",
  DepartmentOfIslamicLaterIndianArt = "Department of Islamic & Later Indian Art",
  DepartmentOfPaintingsSculptureDecorativeArts = "Department of Paintings, Sculpture & Decorative Arts",
}

export interface IDetails {
  technical?: ITechnical[];
  coins?: ICoins;
}

export interface ICoins {
  reverseinscription: null | string;
  dieaxis: null | string;
  metal: EMetal | null;
  obverseinscription: null | string;
  denomination: null | string;
  dateonobject: null | string;
}

export enum EMetal {
  AE = "AE",
  AV = "AV",
  Ar = "AR",
}

export interface ITechnical {
  text: string;
  formattedtext: string;
  type: ETechnicalType;
}

export enum ETechnicalType {
  ChemicalComposition = "Chemical Composition",
  TechnicalObservations = "Technical Observations",
}

export enum EDivision {
  AsianAndMediterraneanArt = "Asian and Mediterranean Art",
  EuropeanAndAmericanArt = "European and American Art",
}

export interface IImage {
  date: null | string;
  copyright: ECopyright | null;
  imageid: number;
  idsid: number;
  format: EImageFormat | null;
  description: null | string;
  technique: null | string;
  renditionnumber: string;
  displayorder: number;
  baseimageurl: string;
  alttext: null | string;
  width: number;
  publiccaption: null | string;
  iiifbaseuri: string;
  height: number;
}

export enum ECopyright {
  KoichiYanagiOrientalFineArts = "Koichi Yanagi Oriental Fine Arts",
  PhotographyJohnTsantesAndNeilGreentreeÂRobertFeinberg = "Photography: John Tsantes and Neil Greentree Â© Robert Feinberg",
  PresidentAndFellowsOfHarvardCollege = "President and Fellows of Harvard College",
}

export enum EImageFormat {
  ImageJPEG = "image/jpeg",
}

export interface IPerson {
  role: ERole;
  birthplace: null | string;
  gender: EGender;
  displaydate: null | string;
  prefix: null | string;
  culture: null | string;
  displayname: string;
  alphasort: string;
  name: string;
  personid: number;
  deathplace: null | string;
  displayorder: number;
}

export enum EGender {
  Male = "male",
  Unidentified = "unidentified",
  Unknown = "unknown",
}

export enum ERole {
  Artist = "Artist",
  CoinConstituent = "Coin Constituent",
  Designer = "Designer",
  Manufacturer = "Manufacturer",
}

export interface ISeeAlso {
  id: string;
  type: ESeeAlsoType;
  format: ESeeAlsoFormat;
  profile: string;
}

export enum ESeeAlsoFormat {
  ApplicationJSON = "application/json",
}

export enum ESeeAlsoType {
  IIIFManifest = "IIIF Manifest",
}

export interface IWorktype {
  worktypeid: string;
  worktype: string;
}
